name: GPT Code Critic

on:
  push:
    branches: [main]

jobs:
  analyze-code:
    name: Test action
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run GPT Code Critic
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: python3 main.py

      - name: Check if results.sarif exists
        run: |
          if [ ! -f results.sarif ]; then
            echo "::error::results.sarif not found"
            exit 1
          fi

      - name: Print results
        run: |
<<<<<<< Updated upstream
          package="{\"key\":\"${{ secrets.OPENAI_API_KEY }}\",\"files\":["

          while read -r file; do
            if [[ $(git diff HEAD $file | wc -l) -le 205 ]]; then
              code=$(git diff HEAD~1 HEAD $file | tail -n +5 | sed 's/^+//')
              package="$package{\"name\":\"$file\",\"code\":\"$code\"},"
              echo "Changes in $file complete."
            else
              echo "Changes in $file too large (limited to 200 lines)."
            fi
          done < changes.txt

          package="${package%,}]}"
          echo "Package: $package"

          curl -w "%{http_code}" -X POST -H "Content-Type: application/json" -d "${package}" https://tuneer.cis188.org/analyze -o results.json
          cat results.json | jq -r '.[] | @sh "##vso[results.publish type=Sarif;]$(jq -r tostring {})"' > results.sarif
=======
          cat results.sarif
>>>>>>> Stashed changes

      - name: Upload results
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif
<<<<<<< Updated upstream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
=======
>>>>>>> Stashed changes
